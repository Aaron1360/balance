import { supabase } from "@/supabase/client";

// Function to fetch data from any table with a generic type
export async function fetchTableData<T>(tableName: string): Promise<T[] | null> {
  try {
    const { data, error } = await supabase
      .from(tableName)
      .select("*")
      .order("date", { ascending: false });

    if (error) {
      console.error(`Error fetching data from ${tableName}:`, error);
      return null;
    }

    return data as T[];
  } catch (error) {
    console.error(`Unexpected error fetching data from ${tableName}:`, error);
    return null;
  }
}

// Function to insert data into any table with a generic type
export async function insertTableData<T>(
  tableName: string,
  record: Omit<T, "id"> // Assuming "id" is auto-generated by the DB
): Promise<void> {
  try {
    const { error } = await supabase.from(tableName).insert([record]);

    if (error) {
      throw error;
    }
    console.log(`${tableName} record added successfully.`);
  } catch (error) {
    console.error(`Error inserting data into ${tableName}:`, error);
  }
}

// Function to delete data from any table
export async function deleteTableData(
  tableName: string,
  id: string
): Promise<void> {
  try {
    const { error } = await supabase.from(tableName).delete().eq("id", id);

    if (error) {
      console.error(`Error deleting data from ${tableName}:`, error);
    } else {
      console.log(`Successfully deleted record with id ${id} from ${tableName}`);
    }
  } catch (error) {
    console.error(`Error deleting data from ${tableName}:`, error);
  }
}

// Function to update data in any table with a generic type
export async function updateTableData<T>(
  tableName: string,
  id: string,
  updatedRecord: Partial<T>
): Promise<void> {
  try {
    const { error } = await supabase
      .from(tableName)
      .update(updatedRecord)
      .eq("id", id);

    if (error) {
      console.error(`Supabase UPDATE error on ${tableName}`, error);
    }
  } catch (error) {
    console.error(`Error updating data in ${tableName}:`, error);
  }
}
